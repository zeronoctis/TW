<?php

namespace TW\neloBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RoomsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoomsRepository extends EntityRepository{

/*
		public function findAllOrderedByName(){
			return $this->getEntityManager()->createQuery('SELECT p FROM TWneloBundle:Rooms p ORDER BY p.name ASC')->getResult();
		}
*/
		public function findAllAvailableByTypeId($type){
			$em = $this->getEntityManager();
			$repository = $em->getRepository('TWneloBundle:Rooms');
			
			$query = $repository->createQueryBuilder('r')
			->where('r.type = :type_id')
			->andWhere('r.state = :state')
			->setParameters(array('state'=>1, 'type_id'=>$type))
			->getQuery();

			return $query->getResult();
		}

		public function findAllAvailableAndOverbookedByTypeId($type){
			$em = $this->getEntityManager();
			$repository = $em->getRepository('TWneloBundle:Rooms');
			
			$query = $repository->createQueryBuilder('r')
			->where('r.type = :type_id')
			->andWhere('r.state = :state OR r.overbooked = :ovstate')
			->setParameters(array('state'=>0, 'type_id'=>$type, 'ovstate'=>1))
			->getQuery();

			return $query->getResult();
		}

		public function findOverbooked($type){
			$em = $this->getEntityManager();
			$repository = $em->getRepository('TWneloBundle:Rooms');
			
			$query = $repository->createQueryBuilder('r')
			->where('r.type = :type_id')
			->andWhere('r.overbooked = :ovstate')
			->setParameters(array('type_id'=>$type, 'ovstate'=>1))
			->getQuery();

			return $query->getResult();
		}

		public function findOcupiedButNotOverbooked(){
			$em = $this->getEntityManager();
			$repository = $em->getRepository('TWneloBundle:Rooms');
			
			$query = $repository->createQueryBuilder('r')
			->where('r.state = :state AND r.overbooked = :ovstate')
			->setParameters(array('state'=>1, 'ovstate'=>0))
			->getQuery();

			return $query->getResult();
		}



		
}
